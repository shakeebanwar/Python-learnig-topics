Dependency Injection:

Dependency has to be injected and not created inside the class.

Type of Dependecny Injection:

1.Constructor Injection.
2.Property Injection.
3.Method Injection.

* In sab ma sa Constructor Injection recomanded ha q ka bina Dependency ko pass kiya class ka object create nhi kar sakta.Property Injection ka case ma developer property pass karna bhol sakta ha jiski waja sa error ana ka zada chances ha.

* Constructor Injection sa humna tight coupling ko avoid kiya ha.Testcase likhta wa ak clearity hongi ka is class ma kiya kiya Dependecny ha aur wo Dependecny hum as a Constructor inject kardaga.

* Dependency Injection enhances code modularity, testability, flexibility, and maintainability by allowing components to be more decoupled and interchangeable.



Important:
Rules of Abstraction:
1.Only provide relvant information.



Dependency Inversion:

work on solid principle.

S: Single Responsibility
O: Open Close
L: LISKOV Substitution
I:Interface Segregation.
D:Dependency Inversion


Defination:
Dependency must always be passed using the highest level of Abstraction (protocol).

Dependency Inversion Principle (DIP): Yeh ek SOLID principles ka hissa hai aur yeh yeh kehta hai ki high-level modules (jaise ki business logic) ko low-level modules (jaise ki database interactions) se directly connect nahi hona chahiye. Instead, dono levels ko abstraction ke through connect kiya jana chahiye

Interview Question:

Q.what is the difference between the Injection and Inversion?

A.Dependecy inversion means Dependency Injection with the help of protocol.

*In the case of Dependency Injection:
    Dependency has to be injected and not created inside the class.